===============================================================================
Supported Providers & Tools                                    *clap-support*


                                                    *:Clap-bcommits*
:Clap bcommits           List git commits for the current buffer.
                         Require `git`


                                                    *:Clap-blines*
:Clap blines             List Lines in the current buffer.


                                                    *:Clap-buffers*
:Clap buffers            List open buffers.


                                                    *:Clap-colors*
:Clap colors             List Colorschemes.
                         Support preview.


                                                    *:Clap-command*
:Clap command            List Command.


                                                    *:Clap-hist:*
                                                    *:Clap-command_history*
:Clap hist:              List Command history.
:Clap command_history


                                                    *:Clap-commits*
:Clap commits            List Git commits.
                         Require `git`

                                                    *:Clap-files*
:Clap files              List Files.
                         Require `fd`/`rg`/`git`/`find`

                         The order of default finder executable used
                         for files is [ `fd`, `rg`, `git`, `find` ] .

                         Use `++finder` to specify another finder
                         executable for the files or pass any options other
                         than the provided `--hidden`. For example,
                         `:Clap files ++finder=rg --files --follow --hidden` means
                         the actual command used for `file` is `rg --files --follow --hidden` .

                         If you have `fd` installed, `:Clap files` is equivalent to
                         `:Clap files ++finder=fd --type f` .

                         For the `fd` and `rg` finder, you can pass
                         `--hidden` to search the hidden files as well, i.e,
                         `:Clap files --hidden` .

                         The last argument can be a directory, i.e.,
                         `Clap files [DIR]` to search files under a
                         specific directory. By default clap will try to use
                         the git base directory or `getcwd()` . For example,
                         use `Clap files ..` to search files under the parent directory.

                         `:Clap files +name-only` to filer the file name
                         instead of the full file path. Require you have built
                         the Python dynamic module or in the cache mode.


                                                     *:Clap-filetypes*
:Clap filetypes          List File types.


                                                     *:Clap-gfiles*
                                                     *:Clap-git_files*
:Clap gfiles             List Files managed by git.
:Clap git_files          Require `git`


                                                     *:Clap-git_diff_files*
:Clap git_diff_files     List Files managed by git and having uncommitted changes.
                         Require `git`

                                                     *:Clap-grep*
:Clap grep               Grep on the fly.
                         Require `rg`

                         Use `Clap grep ++query=<cword>` to grep
                         the word under cursor.

                         Use `Clap grep ++opt=[OPTION]` to pass extra options
                         from the command line which will be put after
                         `g:clap_provider_grep_opts`, e.g.,
                         `Clap grep ++opt=--no-ignore ++opt=--hidden` .

                         The last argument can be a directory, i.e.,
                         `Clap grep [DIR]` to start the grep job under a
                         specific directory. By default clap will try to use
                         the git base directory or `getcwd()` . For example,
                         use `Clap grep ..` to grep from the parent directory.


                                                     *:Clap-help_tags*
:Clap help_tags          List the help tags.


                                                      *:Clap-history*
:Clap history            List the open buffers and |v:oldfiles|.


                                                     *:Clap-jumps*
:Clap jumps              List Jumps
                         Support preview


                                                     *:Clap-lines*
:Clap lines              List the lines of the loaded buffers.


                                                    *:Clap-quickfix*
:Clap quickfix           List the entries of the quickfix list.


                                                     *:Clap-loclist*
:Clap loclist            List the entries of the location list.


                                                     *:Clap-providers*
:Clap providers          List the clap providers.


                                                     *:Clap-maps*
:Clap maps               List the maps.

                         Use `Clap maps ++mode=[n|i|x|o]` to list key mappings
                         for different mode.

                         By default `Clap maps` without `++mode` argument will
                         list key mappings for normal mode.


                                                     *:Clap-marks*
:Clap marks              List Marks
                         Support preview


                                                     *:Clap-registers*
:Clap registers          List Registers


                                                    *:Clap-hist/*
                                                    *:Clap-search_history*
:Clap hist/              List Search history.
:Clap search_history


                                                     *:Clap-tags*
:Clap tags {executive}   List Tags in the current buffer
                         Require `vista.vim`

                         Use `:Clap tags coc` to specify coc as the vista executive.
                         See all the vista executives via `:echo g:vista#executives` .


                                                     *:Clap-proj_tags*
:Clap proj_tags         List tags in the current project.
                        Require the Rust binary `maple` and universal-ctags
                        with JSON output support.

                                                     *:Clap-windows*
:Clap windows            List Windows


[fd]: https://github.com/sharkdp/fd
[rg]: https://github.com/BurntSushi/ripgrep
[git]: https://github.com/git/git
[vista.vim]: https://github.com/liuchengxu/vista.vim

===============================================================================
vim:tw=78:ts=2:sts=2:sw=2:ft=help:norl:
